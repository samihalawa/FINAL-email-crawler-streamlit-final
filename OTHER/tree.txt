.
├── .DS_Store
├── .aider.chat.history.md
├── .aider.input.history
├── .aider.tags.cache.v3
│   ├── c0
│   │   └── 30
│   ├── cache.db
│   └── e8
│       └── 54
├── .devcontainer
│   └── devcontainer.json
├── .env
├── .env.example
├── .git
│   ├── COMMIT_EDITMSG
│   ├── FETCH_HEAD
│   ├── HEAD
│   ├── ORIG_HEAD
│   ├── config
│   ├── description
│   ├── hooks
│   │   ├── applypatch-msg.sample
│   │   ├── commit-msg.sample
│   │   ├── fsmonitor-watchman.sample
│   │   ├── post-update.sample
│   │   ├── pre-applypatch.sample
│   │   ├── pre-commit.sample
│   │   ├── pre-merge-commit.sample
│   │   ├── pre-push.sample
│   │   ├── pre-rebase.sample
│   │   ├── pre-receive.sample
│   │   ├── prepare-commit-msg.sample
│   │   ├── push-to-checkout.sample
│   │   └── update.sample
│   ├── index
│   ├── info
│   │   └── exclude
│   ├── logs
│   │   ├── HEAD
│   │   └── refs
│   ├── objects
│   │   ├── 04
│   │   ├── 05
│   │   ├── 0a
│   │   ├── 0d
│   │   ├── 0f
│   │   ├── 16
│   │   ├── 17
│   │   ├── 18
│   │   ├── 19
│   │   ├── 1b
│   │   ├── 1f
│   │   ├── 25
│   │   ├── 2c
│   │   ├── 32
│   │   ├── 38
│   │   ├── 3c
│   │   ├── 42
│   │   ├── 43
│   │   ├── 44
│   │   ├── 4b
│   │   ├── 4d
│   │   ├── 4e
│   │   ├── 54
│   │   ├── 56
│   │   ├── 62
│   │   ├── 77
│   │   ├── 82
│   │   ├── 85
│   │   ├── 8d
│   │   ├── 94
│   │   ├── 9a
│   │   ├── 9b
│   │   ├── 9c
│   │   ├── 9e
│   │   ├── 9f
│   │   ├── a1
│   │   ├── a3
│   │   ├── a4
│   │   ├── b4
│   │   ├── b8
│   │   ├── c4
│   │   ├── c7
│   │   ├── c9
│   │   ├── cb
│   │   ├── ce
│   │   ├── de
│   │   ├── e5
│   │   ├── e6
│   │   ├── e7
│   │   ├── ec
│   │   ├── f3
│   │   ├── f4
│   │   ├── f6
│   │   ├── f7
│   │   ├── fb
│   │   ├── info
│   │   └── pack
│   ├── packed-refs
│   └── refs
│       ├── heads
│       ├── remotes
│       └── tags
├── .github
│   ├── CODEOWNERS
│   └── workflows
│       ├── publish.yml
│       ├── python-publish.yml
│       └── tests.yml
├── .gitignore
├── .mypy_cache
│   ├── .gitignore
│   ├── 3.12
│   │   ├── IPython
│   │   ├── PIL
│   │   ├── __future__.data.json
│   │   ├── __future__.meta.json
│   │   ├── __main__.data.json
│   │   ├── __main__.meta.json
│   │   ├── _ast.data.json
│   │   ├── _ast.meta.json
│   │   ├── _bisect.data.json
│   │   ├── _bisect.meta.json
│   │   ├── _codecs.data.json
│   │   ├── _codecs.meta.json
│   │   ├── _collections_abc.data.json
│   │   ├── _collections_abc.meta.json
│   │   ├── _compression.data.json
│   │   ├── _compression.meta.json
│   │   ├── _csv.data.json
│   │   ├── _csv.meta.json
│   │   ├── _ctypes.data.json
│   │   ├── _ctypes.meta.json
│   │   ├── _curses.data.json
│   │   ├── _curses.meta.json
│   │   ├── _decimal.data.json
│   │   ├── _decimal.meta.json
│   │   ├── _heapq.data.json
│   │   ├── _heapq.meta.json
│   │   ├── _imp.data.json
│   │   ├── _imp.meta.json
│   │   ├── _operator.data.json
│   │   ├── _operator.meta.json
│   │   ├── _pytest
│   │   ├── _random.data.json
│   │   ├── _random.meta.json
│   │   ├── _socket.data.json
│   │   ├── _socket.meta.json
│   │   ├── _stat.data.json
│   │   ├── _stat.meta.json
│   │   ├── _thread.data.json
│   │   ├── _thread.meta.json
│   │   ├── _tkinter.data.json
│   │   ├── _tkinter.meta.json
│   │   ├── _tracemalloc.data.json
│   │   ├── _tracemalloc.meta.json
│   │   ├── _typeshed
│   │   ├── _warnings.data.json
│   │   ├── _warnings.meta.json
│   │   ├── _weakref.data.json
│   │   ├── _weakref.meta.json
│   │   ├── _weakrefset.data.json
│   │   ├── _weakrefset.meta.json
│   │   ├── abc.data.json
│   │   ├── abc.meta.json
│   │   ├── aiohappyeyeballs
│   │   ├── aiohttp
│   │   ├── aiosignal
│   │   ├── altair
│   │   ├── annotated_types
│   │   ├── anyio
│   │   ├── argparse.data.json
│   │   ├── argparse.meta.json
│   │   ├── array.data.json
│   │   ├── array.meta.json
│   │   ├── ast.data.json
│   │   ├── ast.meta.json
│   │   ├── asttokens
│   │   ├── asyncio
│   │   ├── atexit.data.json
│   │   ├── atexit.meta.json
│   │   ├── attr
│   │   ├── attrs
│   │   ├── base64.data.json
│   │   ├── base64.meta.json
│   │   ├── bdb.data.json
│   │   ├── bdb.meta.json
│   │   ├── binascii.data.json
│   │   ├── binascii.meta.json
│   │   ├── bisect.data.json
│   │   ├── bisect.meta.json
│   │   ├── black
│   │   ├── blinker
│   │   ├── builtins.data.json
│   │   ├── builtins.meta.json
│   │   ├── cProfile.data.json
│   │   ├── cProfile.meta.json
│   │   ├── calendar.data.json
│   │   ├── calendar.meta.json
│   │   ├── certifi
│   │   ├── click
│   │   ├── cmd.data.json
│   │   ├── cmd.meta.json
│   │   ├── codecs.data.json
│   │   ├── codecs.meta.json
│   │   ├── codeop.data.json
│   │   ├── codeop.meta.json
│   │   ├── collections
│   │   ├── colorsys.data.json
│   │   ├── colorsys.meta.json
│   │   ├── concurrent
│   │   ├── configparser.data.json
│   │   ├── configparser.meta.json
│   │   ├── contextlib.data.json
│   │   ├── contextlib.meta.json
│   │   ├── contextvars.data.json
│   │   ├── contextvars.meta.json
│   │   ├── copy.data.json
│   │   ├── copy.meta.json
│   │   ├── copyreg.data.json
│   │   ├── copyreg.meta.json
│   │   ├── csv.data.json
│   │   ├── csv.meta.json
│   │   ├── ctypes
│   │   ├── curses
│   │   ├── cycler
│   │   ├── dataclasses.data.json
│   │   ├── dataclasses.meta.json
│   │   ├── datetime.data.json
│   │   ├── datetime.meta.json
│   │   ├── decimal.data.json
│   │   ├── decimal.meta.json
│   │   ├── difflib.data.json
│   │   ├── difflib.meta.json
│   │   ├── dis.data.json
│   │   ├── dis.meta.json
│   │   ├── distro
│   │   ├── doctest.data.json
│   │   ├── doctest.meta.json
│   │   ├── dotenv
│   │   ├── email
│   │   ├── enum.data.json
│   │   ├── enum.meta.json
│   │   ├── errno.data.json
│   │   ├── errno.meta.json
│   │   ├── executing
│   │   ├── fnmatch.data.json
│   │   ├── fnmatch.meta.json
│   │   ├── fractions.data.json
│   │   ├── fractions.meta.json
│   │   ├── frozenlist
│   │   ├── functools.data.json
│   │   ├── functools.meta.json
│   │   ├── gc.data.json
│   │   ├── gc.meta.json
│   │   ├── genericpath.data.json
│   │   ├── genericpath.meta.json
│   │   ├── getopt.data.json
│   │   ├── getopt.meta.json
│   │   ├── getpass.data.json
│   │   ├── getpass.meta.json
│   │   ├── gettext.data.json
│   │   ├── gettext.meta.json
│   │   ├── git
│   │   ├── glob.data.json
│   │   ├── glob.meta.json
│   │   ├── gzip.data.json
│   │   ├── gzip.meta.json
│   │   ├── h11
│   │   ├── hashlib.data.json
│   │   ├── hashlib.meta.json
│   │   ├── heapq.data.json
│   │   ├── heapq.meta.json
│   │   ├── hmac.data.json
│   │   ├── hmac.meta.json
│   │   ├── html
│   │   ├── http
│   │   ├── httpcore
│   │   ├── httpx
│   │   ├── idna
│   │   ├── importlib
│   │   ├── importlib_metadata
│   │   ├── iniconfig
│   │   ├── inspect.data.json
│   │   ├── inspect.meta.json
│   │   ├── io.data.json
│   │   ├── io.meta.json
│   │   ├── ipaddress.data.json
│   │   ├── ipaddress.meta.json
│   │   ├── itertools.data.json
│   │   ├── itertools.meta.json
│   │   ├── jinja2
│   │   ├── jiter
│   │   ├── json
│   │   ├── keyword.data.json
│   │   ├── keyword.meta.json
│   │   ├── linecache.data.json
│   │   ├── linecache.meta.json
│   │   ├── locale.data.json
│   │   ├── locale.meta.json
│   │   ├── logging
│   │   ├── markdown_it
│   │   ├── markupsafe
│   │   ├── marshal.data.json
│   │   ├── marshal.meta.json
│   │   ├── math.data.json
│   │   ├── math.meta.json
│   │   ├── matplotlib
│   │   ├── mdurl
│   │   ├── mimetypes.data.json
│   │   ├── mimetypes.meta.json
│   │   ├── mmap.data.json
│   │   ├── mmap.meta.json
│   │   ├── msvcrt.data.json
│   │   ├── msvcrt.meta.json
│   │   ├── multidict
│   │   ├── multiprocessing
│   │   ├── mypy_extensions.data.json
│   │   ├── mypy_extensions.meta.json
│   │   ├── narwhals
│   │   ├── netrc.data.json
│   │   ├── netrc.meta.json
│   │   ├── ntpath.data.json
│   │   ├── ntpath.meta.json
│   │   ├── numbers.data.json
│   │   ├── numbers.meta.json
│   │   ├── numpy
│   │   ├── opcode.data.json
│   │   ├── opcode.meta.json
│   │   ├── openai
│   │   ├── operator.data.json
│   │   ├── operator.meta.json
│   │   ├── optparse.data.json
│   │   ├── optparse.meta.json
│   │   ├── os
│   │   ├── outcome
│   │   ├── packaging
│   │   ├── pathlib.data.json
│   │   ├── pathlib.meta.json
│   │   ├── pathspec
│   │   ├── pdb.data.json
│   │   ├── pdb.meta.json
│   │   ├── pickle.data.json
│   │   ├── pickle.meta.json
│   │   ├── pkg_resources
│   │   ├── pkgutil.data.json
│   │   ├── pkgutil.meta.json
│   │   ├── platform.data.json
│   │   ├── platform.meta.json
│   │   ├── platformdirs
│   │   ├── plistlib.data.json
│   │   ├── plistlib.meta.json
│   │   ├── pluggy
│   │   ├── posixpath.data.json
│   │   ├── posixpath.meta.json
│   │   ├── pprint.data.json
│   │   ├── pprint.meta.json
│   │   ├── profile.data.json
│   │   ├── profile.meta.json
│   │   ├── prompt_toolkit
│   │   ├── pstats.data.json
│   │   ├── pstats.meta.json
│   │   ├── pty.data.json
│   │   ├── pty.meta.json
│   │   ├── pure_eval
│   │   ├── pydantic
│   │   ├── pydantic_core
│   │   ├── pydoc.data.json
│   │   ├── pydoc.meta.json
│   │   ├── pyexpat
│   │   ├── pyparsing
│   │   ├── pytest
│   │   ├── queue.data.json
│   │   ├── queue.meta.json
│   │   ├── random.data.json
│   │   ├── random.meta.json
│   │   ├── re.data.json
│   │   ├── re.meta.json
│   │   ├── referencing
│   │   ├── reprlib.data.json
│   │   ├── reprlib.meta.json
│   │   ├── requests
│   │   ├── resource.data.json
│   │   ├── resource.meta.json
│   │   ├── rich
│   │   ├── rpds
│   │   ├── runpy.data.json
│   │   ├── runpy.meta.json
│   │   ├── secrets.data.json
│   │   ├── secrets.meta.json
│   │   ├── select.data.json
│   │   ├── select.meta.json
│   │   ├── selectors.data.json
│   │   ├── selectors.meta.json
│   │   ├── shlex.data.json
│   │   ├── shlex.meta.json
│   │   ├── shutil.data.json
│   │   ├── shutil.meta.json
│   │   ├── signal.data.json
│   │   ├── signal.meta.json
│   │   ├── site.data.json
│   │   ├── site.meta.json
│   │   ├── smtplib.data.json
│   │   ├── smtplib.meta.json
│   │   ├── sniffio
│   │   ├── socket.data.json
│   │   ├── socket.meta.json
│   │   ├── socketserver.data.json
│   │   ├── socketserver.meta.json
│   │   ├── sqlite3
│   │   ├── sre_compile.data.json
│   │   ├── sre_compile.meta.json
│   │   ├── sre_constants.data.json
│   │   ├── sre_constants.meta.json
│   │   ├── sre_parse.data.json
│   │   ├── sre_parse.meta.json
│   │   ├── ssl.data.json
│   │   ├── ssl.meta.json
│   │   ├── stack_data
│   │   ├── stat.data.json
│   │   ├── stat.meta.json
│   │   ├── streamlit
│   │   ├── string.data.json
│   │   ├── string.meta.json
│   │   ├── struct.data.json
│   │   ├── struct.meta.json
│   │   ├── subprocess.data.json
│   │   ├── subprocess.meta.json
│   │   ├── sys.data.json
│   │   ├── sys.meta.json
│   │   ├── sysconfig.data.json
│   │   ├── sysconfig.meta.json
│   │   ├── tempfile.data.json
│   │   ├── tempfile.meta.json
│   │   ├── tenacity
│   │   ├── termios.data.json
│   │   ├── termios.meta.json
│   │   ├── textwrap.data.json
│   │   ├── textwrap.meta.json
│   │   ├── threading.data.json
│   │   ├── threading.meta.json
│   │   ├── time.data.json
│   │   ├── time.meta.json
│   │   ├── timeit.data.json
│   │   ├── timeit.meta.json
│   │   ├── tkinter
│   │   ├── token.data.json
│   │   ├── token.meta.json
│   │   ├── tokenize.data.json
│   │   ├── tokenize.meta.json
│   │   ├── toml
│   │   ├── tomllib.data.json
│   │   ├── tomllib.meta.json
│   │   ├── tornado
│   │   ├── traceback.data.json
│   │   ├── traceback.meta.json
│   │   ├── tracemalloc.data.json
│   │   ├── tracemalloc.meta.json
│   │   ├── traitlets
│   │   ├── trio
│   │   ├── tty.data.json
│   │   ├── tty.meta.json
│   │   ├── types.data.json
│   │   ├── types.meta.json
│   │   ├── typing.data.json
│   │   ├── typing.meta.json
│   │   ├── typing_extensions.data.json
│   │   ├── typing_extensions.meta.json
│   │   ├── unicodedata.data.json
│   │   ├── unicodedata.meta.json
│   │   ├── unittest
│   │   ├── urllib
│   │   ├── urllib3
│   │   ├── uuid.data.json
│   │   ├── uuid.meta.json
│   │   ├── warnings.data.json
│   │   ├── warnings.meta.json
│   │   ├── watchdog
│   │   ├── wave.data.json
│   │   ├── wave.meta.json
│   │   ├── weakref.data.json
│   │   ├── weakref.meta.json
│   │   ├── webbrowser.data.json
│   │   ├── webbrowser.meta.json
│   │   ├── winreg.data.json
│   │   ├── winreg.meta.json
│   │   ├── wsgiref
│   │   ├── xml
│   │   ├── yaml
│   │   ├── yarl
│   │   ├── zipfile.data.json
│   │   ├── zipfile.meta.json
│   │   ├── zipimport.data.json
│   │   ├── zipimport.meta.json
│   │   ├── zlib.data.json
│   │   ├── zlib.meta.json
│   │   └── zoneinfo
│   ├── CACHEDIR.TAG
│   └── missing_stubs
├── .zshrc
├── 20241106_145112_repo.md
├── 20241106_145656_repo.md
├── 20241106_152034_repo.md
├── @RELEASE_active.py
├── LICENSE
├── MANIFEST.in
├── README.md
├── RELEASE_streamlit_app copy 2.py
├── RELEASE_streamlit_app copy.py
├── RELEASE_streamlit_app.py
├── __pycache__
│   └── streamlit_app.cpython-312.pyc
├── ai_debug_agent.py
├── autoclient.db
├── email_env
│   ├── bin
│   │   ├── Activate.ps1
│   │   ├── __pycache__
│   │   ├── activate
│   │   ├── activate.csh
│   │   ├── activate.fish
│   │   ├── distro
│   │   ├── dotenv
│   │   ├── email_validator
│   │   ├── f2py
│   │   ├── httpx
│   │   ├── jp.py
│   │   ├── jsonschema
│   │   ├── markdown-it
│   │   ├── normalizer
│   │   ├── numpy-config
│   │   ├── openai
│   │   ├── pip
│   │   ├── pip3
│   │   ├── pip3.12
│   │   ├── pygmentize
│   │   ├── python -> python3.12
│   │   ├── python3 -> python3.12
│   │   ├── python3.12 -> /usr/local/opt/python@3.12/bin/python3.12
│   │   ├── streamlit
│   │   ├── streamlit.cmd
│   │   └── tqdm
│   ├── etc
│   │   └── jupyter
│   ├── include
│   │   ├── python3.12
│   │   └── site
│   ├── lib
│   │   └── python3.12
│   ├── pyvenv.cfg
│   └── share
│       └── jupyter
├── loop.sh
├── mapcreator-for-LLM-structure-printed-out.sh
├── pyproject.toml
├── pytest.ini
├── reorganize_repos.sh
├── repo_20241106_153411.md
├── repo_structure.html
├── repo_structure_20241106_153411.html
├── requirements.txt
├── setup.cfg
├── setup.py
├── setup_repo.sh
├── streamlit1_app.py
├── streamlit_app copy.py
├── streamlit_app.py
├── streamlit_app2-notworks.py
├── streamlit_app5.py
├── streamlit_appWORKS.py
├── streamlit_app_goodNecesitadebugfinal.py
├── tests
│   ├── conftest.py
│   ├── test_cli.py
│   ├── test_integration.py
│   ├── test_mapper.py
│   └── test_utils.py
├── tree.txt
└── ~
    └── .pypirc

181 directories, 400 files





==> 20241106_145112_repo.md <==
## autoclient.db

**Path:** ./autoclient.db

**First 5 lines:**
```
```

## streamlit.cmd


==> 20241106_145656_repo.md <==
## autoclient.db

**Path:** ./autoclient.db922

**First 5 lines:**
```
```

## streamlit.cmd


==> 20241106_152034_repo.md <==
## autoclient.db

**Path:** ./autoclient.db

**First 5 lines:**
```
```

## streamlit.cmd


==> @RELEASE_active.py <==
def bulk_send_emails(session, template_id, from_email, reply_to, leads, **kwargs):
    progress_bar = kwargs.get('progress_bar')
    status_text = kwargs.get('status_text')
    log_container = kwargs.get('log_container')
    results = kwargs.get('results', [])
    
    sent_count = 0
    total = len(leads)
    
    template = session.query(EmailTemplate).get(template_id)

==> LICENSE <==
MIT License

Copyright (c) 2024 Sami Halawa

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

==> MANIFEST.in <==
include LICENSE
include README.md
include requirements.txt
include .debugai.yml
recursive-include docs *
recursive-include examples *
recursive-include tests * 
==> README.md <==
# AutoclientAI - Lead Generation AI Application

A powerful Streamlit-based application for automated lead generation, email campaigns, and customer outreach.

## 🚀 Features

- Manual and automated lead search
- Email campaign management
- Search term organization and tracking
- Email template management

==> RELEASE_streamlit_app copy 2.py <==
import os, json, re, logging, asyncio, time, requests, pandas as pd, streamlit as st, openai, boto3, uuid, aiohttp, urllib3, random, html, smtplib
from datetime import datetime, timedelta
from dotenv import load_dotenv
from bs4 import BeautifulSoup
from googlesearch import search as google_search
from fake_useragent import UserAgent
from sqlalchemy import func, create_engine, Column, BigInteger, Text, DateTime, ForeignKey, Boolean, JSON, select, text, distinct, and_
from sqlalchemy.orm import declarative_base, sessionmaker, relationship, Session, joinedload
from sqlalchemy.exc import SQLAlchemyError
from botocore.exceptions import ClientError

==> RELEASE_streamlit_app copy.py <==
import os, json, re, logging, asyncio, time, requests, pandas as pd, streamlit as st, openai, boto3, uuid, aiohttp, urllib3, random, html, smtplib
from datetime import datetime, timedelta
from dotenv import load_dotenv
from bs4 import BeautifulSoup
from googlesearch import search as google_search
from fake_useragent import UserAgent
from sqlalchemy import func, create_engine, Column, BigInteger, Text, DateTime, ForeignKey, Boolean, JSON, select, text, distinct, and_
from sqlalchemy.orm import declarative_base, sessionmaker, relationship, Session, joinedload
from sqlalchemy.exc import SQLAlchemyError
from botocore.exceptions import ClientError

==> RELEASE_streamlit_app.py <==
import os, json, re, logging, asyncio, time, requests, pandas as pd, streamlit as st, openai, boto3, uuid, aiohttp, urllib3, random, html, smtplib
from datetime import datetime, timedelta
from dotenv import load_dotenv
from bs4 import BeautifulSoup
from googlesearch import search as google_search
from fake_useragent import UserAgent
from sqlalchemy import func, create_engine, Column, BigInteger, Text, DateTime, ForeignKey, Boolean, JSON, select, text, distinct, and_
from sqlalchemy.orm import declarative_base, sessionmaker, relationship, Session, joinedload
from sqlalchemy.exc import SQLAlchemyError
from botocore.exceptions import ClientError

==> __pycache__ <==

==> ai_debug_agent.py <==
# pip install streamlit torch transformers huggingface_hub pyyaml

import ast
import hashlib
import json
import logging
import asyncio
import time
from dataclasses import dataclass
from pathlib import Path

==> autoclient.db <==

==> email_env <==

==> loop.sh <==
#!/bin/bash

iteration=0  # Initialize iteration counter
max_iterations=30  # Set the maximum number of iterations
input_file="$1"  # Check if an input file is provided as a command-line argument

# Function to perform enhancement with Aider
run_aider() {
    local file="$1"
    local timestamp=$(date +"%Y-%m-%d %H:%M:%S")

==> mapcreator-for-LLM-structure-printed-out.sh <==
#!/bin/bash

# Enable strict error handling and debugging
set -euo pipefail
set -x

# Function for consistent timestamp generation
get_timestamp() {
    date +%Y%m%d_%H%M%S
}

==> pyproject.toml <==
[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm>=6.2"]
build-backend = "setuptools.build_meta"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-ra -q"

[tool.black]

==> pytest.ini <==
[pytest]
testpaths = tests
python_files = test_*.py
addopts = --verbose --cov=debugai --cov-report=html 
==> reorganize_repos.sh <==
#!/bin/bash

# Colors for output
GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# Error handling
set -e
function handle_error() {

==> repo_20241106_153411.md <==
# Repository Structure Analysis
Generated on: Wed Nov  6 15:34:11 CET 2024
Generator Version: 2.0

## Directory Tree
```
.
├── email_env
│   ├── bin
│   │   ├── Activate.ps1

==> repo_structure.html <==
<!DOCTYPE html>
<html>
<head>
 <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
 <meta name="Author" content="Made by 'tree'">
 <meta name="GENERATOR" content="tree v2.1.3 © 1996 - 2024 by Steve Baker, Thomas Moore, Francesc Rocher, Florian Sesser, Kyosuke Tokoro">
 <title>Directory Tree</title>
 <style type="text/css">
  BODY { font-family : monospace, sans-serif;  color: black;}
  P { font-family : monospace, sans-serif; color: black; margin:0px; padding: 0px;}

==> repo_structure_20241106_153411.html <==
<!DOCTYPE html>
<html>
<head>
 <meta http-equiv="Content-Type" content="text/html; charset=utf-8">
 <meta name="Author" content="Made by 'tree'">
 <meta name="GENERATOR" content="tree v2.1.3 © 1996 - 2024 by Steve Baker, Thomas Moore, Francesc Rocher, Florian Sesser, Kyosuke Tokoro">
 <title>Repository Structure</title>
 <style type="text/css">
  BODY { font-family : monospace, sans-serif;  color: black;}
  P { font-family : monospace, sans-serif; color: black; margin:0px; padding: 0px;}

==> requirements.txt <==
aiohttp
beautifulsoup4
boto3
botocore
fake-useragent
openai
pandas
plotly
psycopg2-binary
python-dotenv

==> setup.cfg <==
[metadata]
description-file = README.md

[bdist_wheel]
universal = 1 
==> setup.py <==
from setuptools import setup, find_packages
import os

# Read version from __init__.py
with open(os.path.join('debugai', '__init__.py'), 'r') as f:
    for line in f:
        if line.startswith('__version__'):
            version = line.split('=')[1].strip().strip('"\'')
            break


==> setup_repo.sh <==
#!/bin/bash

# Colors for output
GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# Add at beginning of script
set -e  # Exit on error


==> streamlit1_app.py <==
import streamlit as st
import pandas as pd
import asyncio
from datetime import datetime
from fake_useragent import UserAgent
from bs4 import BeautifulSoup
from googlesearch import search
import boto3
from botocore.exceptions import NoCredentialsError, PartialCredentialsError, ClientError
import openai

==> streamlit_app copy.py <==
import os, json, re, logging, asyncio, time, requests, pandas as pd, streamlit as st, openai, boto3, uuid, aiohttp, urllib3, random, html, smtplib
from datetime import datetime, timedelta
from dotenv import load_dotenv
from bs4 import BeautifulSoup
from googlesearch import search as google_search
from fake_useragent import UserAgent
from sqlalchemy import func, create_engine, Column, BigInteger, Text, DateTime, ForeignKey, Boolean, JSON, select, text, distinct, and_, case, or_
from sqlalchemy.orm import declarative_base, sessionmaker, relationship, Session, joinedload
from sqlalchemy.exc import SQLAlchemyError
from botocore.exceptions import ClientError

==> streamlit_app.py <==
import os, json, re, logging, asyncio, time, requests, pandas as pd, streamlit as st, openai, boto3, uuid, aiohttp, urllib3, random, html, smtplib
from datetime import datetime, timedelta
from dotenv import load_dotenv
from bs4 import BeautifulSoup
from googlesearch import search as google_search
from fake_useragent import UserAgent
from sqlalchemy import func, create_engine, Column, BigInteger, Text, DateTime, ForeignKey, Boolean, JSON, select, text, distinct, and_
from sqlalchemy.orm import declarative_base, sessionmaker, relationship, Session, joinedload
from sqlalchemy.exc import SQLAlchemyError
from botocore.exceptions import ClientError

==> streamlit_app2-notworks.py <==
"""
AUTOCLIENT - Lead Generation App

This application facilitates lead generation through manual and bulk searches,
manages campaigns, templates, and integrates AI functionalities for optimizing
search terms and email templates.
"""

# --------------------- Standard Imports ---------------------
import os

==> streamlit_app5.py <==
#pip install pip install streamlit redis psutil sqlalchemy boto3 openai pandas plotly beautifulsoup4 email-validator tenacity
import os
import json
import re
import logging
import time
import pandas as pd
import streamlit as st
import boto3
import uuid

==> streamlit_appWORKS.py <==
        session.rollback()
        logging.error(f"Database error: {str(e)}")
        raise

def save_email_campaign(session, lead_email, template_id, status, sent_at, subject, message_id, email_body):
    try:
        lead = session.query(Lead).filter_by(email=lead_email).first()
        if not lead:
            logging.error(f"Lead with email {lead_email} not found.")
            return

==> streamlit_app_goodNecesitadebugfinal.py <==
import os
import json
import re
import logging
import asyncio
import time
import requests
import pandas as pd
import streamlit as st
import openai

==> tests <==

==> tree.txt <==
.
├── .DS_Store
├── .aider.chat.history.md
├── .aider.input.history
├── .aider.tags.cache.v3
│   ├── c0
│   │   └── 30
│   ├── cache.db
│   └── e8
│       └── 54

==> ~ <==
